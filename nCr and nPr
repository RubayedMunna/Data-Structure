

///nCr and nPr Calculation
/**
const ll mod=1e9+7LL;
const ll MAX=2e5+9LL;
ll inv[MAX];
ll fact[MAX];
ll c_inv[MAX];
///Initialization
void init(){fact[0]=1;for(ll i=1; i<=MAX; i++){if(i==1)fact[i]=1;else fact[i]=(fact[i-1]*i)%mod;}inv[1] = 1;for(int i = 2; i <=MAX; ++i)inv[i] = mod - (mod/i) * inv[mod%i] % mod;for(ll i=1; i<=MAX; i++){if(i==1)c_inv[i]=inv[i];else c_inv[i]=(c_inv[i-1]*inv[i])%mod;}c_inv[0]=1;}
///nCr
ll nCr(ll n,ll r){return (((fact[n]*c_inv[r])%mod)*c_inv[n-r])%mod;}
///nPr
ll nPr(ll n,ll r){return (((fact[n])%mod)*c_inv[n-r])%mod;}
**/


///nCr Without Modulo operation
///ll NCR(ll n,ll r){if(n<r)return 0;ll numerator=1,denomenator=1;if((n-r)<r){r=n-r;}if(r!=0){while(r){numerator*=n;denomenator*=r;ll gcd=__gcd(numerator,denomenator);numerator/=gcd;denomenator/=gcd;n--;r--;}}else{numerator=1;}return numerator;}
